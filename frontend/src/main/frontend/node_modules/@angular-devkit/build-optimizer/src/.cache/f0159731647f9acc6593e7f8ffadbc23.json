{"remainingRequest":"/Users/kylebeard/Documents/Software-Engineering/Iteration_3/Math_Nutz_FE/frontend/src/main/frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/kylebeard/Documents/Software-Engineering/Iteration_3/Math_Nutz_FE/frontend/src/main/frontend/node_modules/core-js/modules/_iter-call.js","dependencies":[{"path":"/Users/kylebeard/Documents/Software-Engineering/Iteration_3/Math_Nutz_FE/frontend/src/main/frontend/node_modules/core-js/modules/_iter-call.js","mtime":1523582016166},{"path":"/Users/kylebeard/Documents/Software-Engineering/Iteration_3/Math_Nutz_FE/frontend/src/main/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1523582015526},{"path":"/Users/kylebeard/Documents/Software-Engineering/Iteration_3/Math_Nutz_FE/frontend/src/main/frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1523582013283}],"contextDependencies":[],"result":["// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n",null]}